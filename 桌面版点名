from tkinter import *
import time

root = Tk()
root.title("Aloe")
root.geometry('300x200')
class RandomName(Frame):    #随机取人主体
    def __init__(self, parent=None, **kw):
        Frame.__init__(self, parent, kw)
        self.name_list = []
        self._start = 0.0
        self._elapsedtime = 0.0
        self._running = False
        self.timestr = StringVar()   #Tkinter中一些组件(Button, Label等) 如果设置一个textvariable属性为一个StringVar(IntVar, DoubleVar)对象。
                                     # 当这个对象的值被重新设置的时候，组件上的显示文字就会自动变成新的值。
                                     #应该是取相应的数组变量，整型变量，和双浮点变量
        self.makeWidgets()

    def makeWidgets(self):       #  定义标签栏 '制作时间标签
        l = Label(self, textvariable=self.timestr, font=("Arial, 35"))
        self.set_name(self._elapsedtime)
        l.pack(side=TOP)
    def update(self):
        # 更新显示内容
        self._elapsedtime = time.time() - self._start
        self.set_name(self._elapsedtime)  # 设置显示内容 ,elapsedtime：执行当前任务所花费的总时间
        self._timer = self.after(100, self.update)  # 刷新界面

    def set_name(self, elap):
        # 随机产生姓名的详细代码
        cur = int(elap * 100 % 30)
        name_list = ['周嘉铖', '钱珑超', '徐展', '尤桉哲','钱涛', '黄舒怡', '胡志辉',  '吴昭耀',  '陈萌萌',  '郑巧悦',  '陈艳', '梁明皓',  '蒋俊超', '徐颖',  '倪宏涛', '潘梦倩',  '俞靖庐', '王中阳',  '毛贞强',  '张嫒',  '朱速航',  '陈涛',  '陆元超',  '叶振雄',  '奚申杰', '叶梦婷', '徐丽丽',  '潘艳']
        self.timestr.set(name_list[cur])

    def Start(self):
        # 开始
        if not self._running:
            self._start = time.time() - self._elapsedtime
            self.update()
            self._running = True

    def Stop(self):
        # 暂停
        if self._running:
            self.after_cancel(self._timer)
            self._elapsedtime = time.time() - self._start
            self.set_name(self._elapsedtime)
            self._running = False

    def name_label(self):
        # 显示窗口
        self.pack(side=TOP)
        Button(self, text='start', command=self.Start, width=10, height=2).pack(side=LEFT)
        Button(self, text='stop', command=self.Stop, width=10, height=2).pack(side=LEFT)
        Button(self, text='quit', command=self.closegame, width=10, height=2).pack(side=LEFT)
    def closegame(self):    #登出
        time.sleep(0.1)     #延迟0.1秒执行
        root.destroy()
if __name__ == '__main__':

    sw = RandomName(root)
    sw.name_label()
    root.mainloop()
